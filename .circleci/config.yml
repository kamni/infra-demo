version: 2.1

default_python_image: &default_python_image
  image: circleci/python:3.8

###############################################################################

executors:
  default-test:
    docker:
      - <<: *default_python_image

  with-test-db:
    docker:
      - <<: *default_python_image
        environment:
          - DJANGO_ALLOWED_HOSTS=*
          - DJANGO_SECRET_KEY=f2dv_8dvp=d5rogseq4strs2!owgjcoz8gtkkc6k@(_lenbmb2
          - POSTGRES_DB=circle_test
          - POSTGRES_HOST=localhost
          - POSTGRES_PASSWORD=postgres
          - POSTGRES_USER=postgres
      - image: circleci/postgres:11.11
        environment:
          - POSTGRES_DB=circle_test
          - POSTGRES_PASSWORD=postgres

###############################################################################

jobs:
  run-tox:
    executor: << parameters.executor >>
    parameters:
      toxenv:
        type: string
        description: The tox environment to run
      executor:
        type: executor
        default: default-test
    steps:
      - checkout

      - run:
          name: Create composite file for cache key
          command: cat backend/tox.ini backend/requirements/*.txt > cache-checker.txt

      - restore_cache:
          keys:
            - jleadbetter-{{ checksum "cache-checker.txt" }}
            - jleadbetter

      - run: pip install --user tox

      - run: mkdir -p test-reports

      - run:
          name: Run the specified tests
          command: |
            cd backend && \
            ~/.local/bin/tox -re << parameters.toxenv >>

      - store_test_results:
          path: test-reports

      - store_artifacts:
          path: test-reports

      - save_cache:
          key: jleadbetter-{{ checksum "cache-checker.txt" }}
          paths:
            - ~/.cache/pip

###############################################################################

workflows:
  test-flake8:
    jobs:
      - run-tox:
          toxenv: flake8
      - run-tox:
          toxenv: isort
      - run-tox:
          toxenv: deploy-check
          executor: with-test-db
